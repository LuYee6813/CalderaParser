if (Test-Path $env:LOCALAPPDATA\AtomicRedTeam\$env:USERNAME.txt) { ; } else {New-Item -Type Directory (split-path "$env:LOCALAPPDATA\AtomicRedTeam\$env:USERNAME.txt") -ErrorAction Ignore | Out-Null; $cred = Get-Credential -UserName  $env:USERNAME -message "Enter password for $env:USERNAME to use during password change attempt"; $cred.Password | ConvertFrom-SecureString | Out-File "$env:LOCALAPPDATA\AtomicRedTeam\$env:USERNAME.txt"};  ;  $credFile = "$env:LOCALAPPDATA\AtomicRedTeam\$env:USERNAME.txt"; if (Test-Path $credFile) {;     $cred = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $env:USERNAME, (Get-Content $credFile | ConvertTo-SecureString);     if($cred.GetNetworkCredential().Password -eq "UpperLowerLong333noSpecialChar"){;       Write-Host -ForegroundColor Yellow "The new password is the same as the password stored in the credential file. Please specify a different new password."; exit -1;     };     try {;         $newPassword = ConvertTo-SecureString UpperLowerLong333noSpecialChar -AsPlainText -Force;         Set-ADAccountPassword -Identity $env:USERNAME -OldPassword $cred.password -NewPassword $newPassword;     };     catch { ;         $_.Exception;         $errCode = $_.Exception.ErrorCode;         Write-Host "Error code: $errCode";         if ($errCode -eq 86) {;             Write-Host -ForegroundColor Yellow "The stored password for the current user is incorrect. Please run the prereq commands to set the correct credentials";             Remove-Item $credFile;         };         exit $errCode;     };     Write-Host -ForegroundColor Cyan "Successfully changed the password to UpperLowerLong333noSpecialChar";     $newCred = New-Object System.Management.Automation.PSCredential ($env:USERNAME, $(ConvertTo-SecureString "UpperLowerLong333noSpecialChar" -AsPlainText -Force));     $newCred.Password | ConvertFrom-SecureString | Out-File $credFile; }; else {;     Write-Host -ForegroundColor Yellow "You must store the password of the current user by running the prerequisite commands first"; }